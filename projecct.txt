select * from student;
SELECT COUNT(*) FROM student;

desc student;

UPDATE student AS s
JOIN ( 
    SELECT id, (@rank := @rank + 1) AS new_rank
    FROM student, (SELECT @rank := 0) AS r
    ORDER BY cutoff DESC, dob ASC
) AS ranked
ON s.id = ranked.id
SET s.student_rank = ranked.new_rank;
 select name,cutoff,student_rank,counseling_round from student;
 
 
 UPDATE student
SET counseling_round = 
    CASE 
        WHEN student_rank <= 72 THEN 1 
        ELSE 2 
    END;

 
 select * from student;
ALTER TABLE student add  student_rank INT;
UPDATE student s
JOIN (
    SELECT id, 
           RANK() OVER (ORDER BY cutoff DESC, dob ASC) AS calculated_rank
    FROM student
) ranked
ON s.id = ranked.id
SET s.student_rank = ranked.calculated_rank;
ALTER TABLE student DROP CONSTRAINT student_chk_4;

desc student;


















CREATE TABLE choices (
    id INT AUTO_INCREMENT PRIMARY KEY,
    student_name VARCHAR(255) NOT NULL,
    dob DATE NOT NULL,
    phone VARCHAR(15) NOT NULL,
    choice1 VARCHAR(255) NOT NULL,
    choice2 VARCHAR(255) NOT NULL
);
select * from seat_allotment;
describe colleges;





CREATE TABLE colleges (
    c_id INT AUTO_INCREMENT PRIMARY KEY,
    collegename VARCHAR(25) NOT NULL,
    affiliation VARCHAR(25) NOT NULL,
    location VARCHAR(25) NOT NULL,
    branch VARCHAR(10) NOT NULL,
    seats INT NOT NULL,
    cutoff FLOAT NOT NULL,
    tnea_code INT NOT NULL
);



CREATE TABLE seat_allotment (
    s_id INT AUTO_INCREMENT PRIMARY KEY,
    student_id INT NOT NULL,
    college_id INT NOT NULL,
    branch VARCHAR(10) NOT NULL,
    status ENUM('Allotted', 'Pending') DEFAULT 'Allotted',
    FOREIGN KEY (student_id) REFERENCES student(id) ON DELETE CASCADE,
    FOREIGN KEY (college_id) REFERENCES colleges(c_id) ON DELETE CASCADE
);


INSERT INTO seat_allotment (id, id, branch, status)
VALUES (%s, %s, %s, 'Allotted');
ALTER TABLE colleges MODIFY college_id INT AUTO_INCREMENT;


ALTER TABLE colleges CHANGE COLUMN id college_id INT;

drop table colleges;



describe colleges;
use tneaa;
select * from student;




